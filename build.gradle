/*
 *
 * Copyright (c) 2018 PAY, Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

// Top-level build file where you can add configuration options common to all sub-projects/modules.
plugins {
    alias(libs.plugins.android.application) apply false
    alias(libs.plugins.jetbrains.kotlin.android) apply false
    alias(libs.plugins.google.devtools.ksp) apply false
    alias(libs.plugins.maven.publish) apply false
    alias(libs.plugins.diffplug.spotless)
    alias(libs.plugins.jetbrains.dokka)
}

subprojects {
    apply plugin: 'com.diffplug.spotless'
    spotless {
        kotlin {
            target "**/*.kt"
            ktlint("0.39.0")
            licenseHeaderFile project.rootProject.file('spotless/Copyright.kt')
        }
    }
    if (project.plugins.hasPlugin('org.jetbrains.dokka')) {
        tasks.named("dokkaHtml") {
            dokkaSourceSets {
                configureEach {
                    platform.set(org.jetbrains.dokka.Platform.jvm)
                    includeNonPublic.set(false)
                    noAndroidSdkLink.set(false)
                }
            }
        }
    }
}

tasks.named("dokkaHtmlCollector") {
    outputDirectory.set(rootProject.file("docs"))
    moduleName.set("payjp-android")
}

ext {
    minSdkVersion = 16
    sdkVersion = 34
    numberOfCommits = numberOfCommits()
}

def numberOfCommits() {
    def p = 'git rev-list HEAD --count'.execute([], project.rootDir)
    if (p.waitFor() != 0) {
        throw new RuntimeException(p.errorStream.text)
    }
    return p.text.trim().toInteger()
}
