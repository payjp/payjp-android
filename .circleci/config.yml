version: 2

docker_env:
  - &defaults
    docker:
      - image: circleci/android:api-29
        environment:
          JAVA_OPTS: '-Xmx2048m -XX:MaxMetaspaceSize=512m'
          GRADLE_OPTS: '-Dorg.gradle.daemon=false -Dorg.gradle.jvmargs="-Xmx2048m -XX:MaxMetaspaceSize=512m -XX:+HeapDumpOnOutOfMemoryError" -Dkotlin.incremental=false'
    working_directory: ~/code

cache_step:
  - gradle_cache:
      primary: &primary_cache_key_gradle gradle-v1-{{ checksum "/tmp/checksum.txt" }}
      keys: &all_cache_keys_gradle
        - *primary_cache_key_gradle
        - gradle-v1-
  - gem_cache:
      primary: &primary_cache_key_gem gem-v1-{{ checksum "Gemfile.lock" }}
      keys: &all_cache_keys_gem
        - *primary_cache_key_gem
        - gem-v1-
  - restore_cache: &restore_cache_gradle
      keys: *all_cache_keys_gradle
  - save_cache: &save_cache_gradle
      paths:
        - ~/.android
        - ~/.gradle
        - .gradle
      key: *primary_cache_key_gradle
  - restore_cache: &restore_cache_gem
      keys: *all_cache_keys_gem
  - save_cache: &save_cache_gem
      paths:
        - vendor/bundle
      key: *primary_cache_key_gem

shared_build_steps:
  - run: &set_env
      command: |
        echo "export REPOSITORY_ROOT=$(git rev-parse --show-toplevel)" >> $BASH_ENV
        echo "source $CIRCLE_WORKING_DIRECTORY/scripts/bash.source" >> $BASH_ENV
        source $BASH_ENV
  - run: &update_sdk
      name: Update Android SDK
      command: |
        mkdir "$ANDROID_HOME/licenses" || true
        cp ./.android-sdk-license "$ANDROID_HOME/licenses/android-sdk-license"
  - run: &bundle_install
      name: bundle install for fastlane
      command: bundle install --path=vendor/bundle --clean
  - run: &generate_cache_key
      name: Generate cache key
      command: scripts/checksum.sh /tmp/checksum.txt
jobs:
  build:
    resource_class: xlarge
    <<: *defaults
    steps:
      - checkout
      - run: *set_env
      - run: *update_sdk
      - run: *generate_cache_key
      - restore_cache: *restore_cache_gem
      - run: *bundle_install
      - save_cache: *save_cache_gem
      - restore_cache: *restore_cache_gradle
      - run: ./gradlew androidDependencies
      - run: bundle exec fastlane android check
      - save_cache: *save_cache_gradle
      - store_artifacts:
          path: payjp/build/outputs
  create_pr_to_public:
    <<: *defaults
    steps:
      - checkout
      - run: *set_env
      - restore_cache: *restore_cache_gem
      - run: *bundle_install
      - run: bundle exec fastlane android create_pr_to_public
  firebase_test_lab_robo:
    <<: *defaults
    steps:
      - checkout
      - run: *set_env
      - run: *update_sdk
      - run: *generate_cache_key
      - restore_cache: *restore_cache_gem
      - run: *bundle_install
      - restore_cache: *restore_cache_gradle
      - run: bundle exec fastlane android test_robo_sample
  develop_updated:
    <<: *defaults
    steps:
      - checkout
      - run: *set_env
      - run: *update_sdk
      - run: *generate_cache_key
      - restore_cache: *restore_cache_gem
      - run: *bundle_install
      - restore_cache: *restore_cache_gradle
      - run: bundle exec fastlane android distribute_sample_app

workflows:
  version: 2
  default_flow:
    jobs:
      - build
      - create_pr_to_public:
          requires:
            - build
          filters:
            branches:
              only: master
      - firebase_test_lab_robo:
          requires:
            - build
          filters:
            branches:
              only: develop
      - develop_updated:
          requires:
            - build
          filters:
            branches:
              only: develop